window.DocsSearchModuleIndex = [[{"values":[],"tag":"LocalPackage"},["Ch5","Ch6","Main","Test.Main"]],[{"values":[],"tag":"Builtin"},["Prim","Prim.Boolean","Prim.Coerce","Prim.Ordering","Prim.Row","Prim.RowList","Prim.Symbol","Prim.TypeError"]],[{"values":["aff"],"tag":"Package"},["Effect.Aff","Effect.Aff.Class","Effect.Aff.Compat"]],[{"values":["ansi"],"tag":"Package"},["Ansi.Codes","Ansi.Output"]],[{"values":["arrays"],"tag":"Package"},["Data.Array","Data.Array.NonEmpty","Data.Array.NonEmpty.Internal","Data.Array.Partial","Data.Array.ST","Data.Array.ST.Iterator","Data.Array.ST.Partial"]],[{"values":["avar"],"tag":"Package"},["Effect.AVar","Effect.Aff.AVar"]],[{"values":["bifunctors"],"tag":"Package"},["Control.Biapplicative","Control.Biapply","Data.Bifunctor","Data.Bifunctor.Join"]],[{"values":["catenable-lists"],"tag":"Package"},["Data.CatList","Data.CatQueue"]],[{"values":["console"],"tag":"Package"},["Effect.Class.Console","Effect.Console"]],[{"values":["const"],"tag":"Package"},["Data.Const"]],[{"values":["contravariant"],"tag":"Package"},["Data.Comparison","Data.Decidable","Data.Decide","Data.Divide","Data.Divisible","Data.Equivalence","Data.Functor.Contravariant","Data.Op","Data.Predicate"]],[{"values":["control"],"tag":"Package"},["Control.Alt","Control.Alternative","Control.Comonad","Control.Extend","Control.Lazy","Control.MonadPlus","Control.MonadZero","Control.Plus","Data.Monoid.Alternate"]],[{"values":["datetime"],"tag":"Package"},["Data.Date","Data.Date.Component","Data.Date.Component.Gen","Data.Date.Gen","Data.DateTime","Data.DateTime.Gen","Data.DateTime.Instant","Data.Interval","Data.Interval.Duration","Data.Interval.Duration.Iso","Data.Time","Data.Time.Component","Data.Time.Component.Gen","Data.Time.Duration","Data.Time.Duration.Gen","Data.Time.Gen"]],[{"values":["distributive"],"tag":"Package"},["Data.Distributive"]],[{"values":["effect"],"tag":"Package"},["Effect","Effect.Class","Effect.Uncurried","Effect.Unsafe"]],[{"values":["either"],"tag":"Package"},["Data.Either","Data.Either.Inject","Data.Either.Nested"]],[{"values":["enums"],"tag":"Package"},["Data.Enum","Data.Enum.Gen","Data.Enum.Generic"]],[{"values":["exceptions"],"tag":"Package"},["Effect.Exception","Effect.Exception.Unsafe"]],[{"values":["exists"],"tag":"Package"},["Data.Exists"]],[{"values":["foldable-traversable"],"tag":"Package"},["Data.Bifoldable","Data.Bitraversable","Data.Foldable","Data.FoldableWithIndex","Data.FunctorWithIndex","Data.Semigroup.Foldable","Data.Semigroup.Traversable","Data.Traversable","Data.Traversable.Accum","Data.Traversable.Accum.Internal","Data.TraversableWithIndex"]],[{"values":["fork"],"tag":"Package"},["Control.Monad.Fork.Class"]],[{"values":["free"],"tag":"Package"},["Control.Comonad.Cofree","Control.Comonad.Cofree.Class","Control.Monad.Free","Control.Monad.Free.Class","Control.Monad.Trampoline","Data.Coyoneda","Data.Yoneda"]],[{"values":["functions"],"tag":"Package"},["Data.Function.Uncurried"]],[{"values":["functors"],"tag":"Package"},["Data.Functor.App","Data.Functor.Clown","Data.Functor.Compose","Data.Functor.Coproduct","Data.Functor.Coproduct.Inject","Data.Functor.Coproduct.Nested","Data.Functor.Costar","Data.Functor.Flip","Data.Functor.Joker","Data.Functor.Product","Data.Functor.Product.Nested","Data.Functor.Product2"]],[{"values":["gen"],"tag":"Package"},["Control.Monad.Gen","Control.Monad.Gen.Class","Control.Monad.Gen.Common"]],[{"values":["identity"],"tag":"Package"},["Data.Identity"]],[{"values":["integers"],"tag":"Package"},["Data.Int","Data.Int.Bits"]],[{"values":["invariant"],"tag":"Package"},["Data.Functor.Invariant"]],[{"values":["lazy"],"tag":"Package"},["Data.Lazy"]],[{"values":["lists"],"tag":"Package"},["Data.List","Data.List.Internal","Data.List.Lazy","Data.List.Lazy.NonEmpty","Data.List.Lazy.Types","Data.List.NonEmpty","Data.List.Partial","Data.List.Types","Data.List.ZipList"]],[{"values":["math"],"tag":"Package"},["Math"]],[{"values":["maybe"],"tag":"Package"},["Data.Maybe","Data.Maybe.First","Data.Maybe.Last"]],[{"values":["mmorph"],"tag":"Package"},["Control.Monad.Morph"]],[{"values":["newtype"],"tag":"Package"},["Data.Newtype"]],[{"values":["nonempty"],"tag":"Package"},["Data.NonEmpty"]],[{"values":["now"],"tag":"Package"},["Effect.Now"]],[{"values":["numbers"],"tag":"Package"},["Data.Number","Data.Number.Approximate","Data.Number.Format"]],[{"values":["ordered-collections"],"tag":"Package"},["Data.Map","Data.Map.Gen","Data.Map.Internal","Data.Set","Data.Set.NonEmpty"]],[{"values":["orders"],"tag":"Package"},["Data.Ord.Down","Data.Ord.Max","Data.Ord.Min"]],[{"values":["parallel"],"tag":"Package"},["Control.Parallel","Control.Parallel.Class"]],[{"values":["partial"],"tag":"Package"},["Partial","Partial.Unsafe"]],[{"values":["pipes"],"tag":"Package"},["Pipes","Pipes.Core","Pipes.Internal","Pipes.ListT","Pipes.Prelude"]],[{"values":["prelude"],"tag":"Package"},["Control.Applicative","Control.Apply","Control.Bind","Control.Category","Control.Monad","Control.Semigroupoid","Data.Boolean","Data.BooleanAlgebra","Data.Bounded","Data.Bounded.Generic","Data.CommutativeRing","Data.DivisionRing","Data.Eq","Data.Eq.Generic","Data.EuclideanRing","Data.Field","Data.Function","Data.Functor","Data.Generic.Rep","Data.HeytingAlgebra","Data.HeytingAlgebra.Generic","Data.Monoid","Data.Monoid.Additive","Data.Monoid.Conj","Data.Monoid.Disj","Data.Monoid.Dual","Data.Monoid.Endo","Data.Monoid.Generic","Data.Monoid.Multiplicative","Data.NaturalTransformation","Data.Ord","Data.Ord.Generic","Data.Ordering","Data.Ring","Data.Ring.Generic","Data.Semigroup","Data.Semigroup.First","Data.Semigroup.Generic","Data.Semigroup.Last","Data.Semiring","Data.Semiring.Generic","Data.Show","Data.Show.Generic","Data.Symbol","Data.Unit","Data.Void","Record.Unsafe","Type.Data.Row","Type.Data.RowList","Type.Proxy"]],[{"values":["profunctor"],"tag":"Package"},["Data.Profunctor","Data.Profunctor.Choice","Data.Profunctor.Closed","Data.Profunctor.Cochoice","Data.Profunctor.Costrong","Data.Profunctor.Join","Data.Profunctor.Split","Data.Profunctor.Star","Data.Profunctor.Strong"]],[{"values":["psci-support"],"tag":"Package"},["PSCI.Support"]],[{"values":["refs"],"tag":"Package"},["Effect.Ref"]],[{"values":["safe-coerce"],"tag":"Package"},["Safe.Coerce"]],[{"values":["spec"],"tag":"Package"},["Test.Spec","Test.Spec.Assertions","Test.Spec.Assertions.String","Test.Spec.Console","Test.Spec.Reporter.Base","Test.Spec.Reporter.Console","Test.Spec.Reporter.Dot","Test.Spec.Reporter.Spec","Test.Spec.Reporter.Tap","Test.Spec.Result","Test.Spec.Runner","Test.Spec.Runner.Event","Test.Spec.Speed","Test.Spec.Style","Test.Spec.Summary","Test.Spec.Tree"]],[{"values":["st"],"tag":"Package"},["Control.Monad.ST.Class","Control.Monad.ST.Global","Control.Monad.ST.Internal"]],[{"values":["strings"],"tag":"Package"},["Data.Char","Data.Char.Gen","Data.String.CaseInsensitive","Data.String.CodePoints","Data.String.CodeUnits","Data.String.Common","Data.String.Gen","Data.String.NonEmpty.CaseInsensitive","Data.String.NonEmpty.CodePoints","Data.String.NonEmpty.CodeUnits","Data.String.NonEmpty.Internal","Data.String.Pattern","Data.String.Regex","Data.String.Regex.Flags","Data.String.Regex.Unsafe","Data.String.Unsafe"]],[{"values":["tailrec"],"tag":"Package"},["Control.Monad.Rec.Class"]],[{"values":["transformers"],"tag":"Package"},["Control.Comonad.Env","Control.Comonad.Env.Class","Control.Comonad.Env.Trans","Control.Comonad.Store","Control.Comonad.Store.Class","Control.Comonad.Store.Trans","Control.Comonad.Traced","Control.Comonad.Traced.Class","Control.Comonad.Traced.Trans","Control.Comonad.Trans.Class","Control.Monad.Cont","Control.Monad.Cont.Class","Control.Monad.Cont.Trans","Control.Monad.Error.Class","Control.Monad.Except","Control.Monad.Except.Trans","Control.Monad.Identity.Trans","Control.Monad.List.Trans","Control.Monad.Maybe.Trans","Control.Monad.RWS","Control.Monad.RWS.Trans","Control.Monad.Reader","Control.Monad.Reader.Class","Control.Monad.Reader.Trans","Control.Monad.State","Control.Monad.State.Class","Control.Monad.State.Trans","Control.Monad.Trans.Class","Control.Monad.Writer","Control.Monad.Writer.Class","Control.Monad.Writer.Trans"]],[{"values":["tuples"],"tag":"Package"},["Data.Tuple","Data.Tuple.Nested"]],[{"values":["type-equality"],"tag":"Package"},["Type.Equality"]],[{"values":["unfoldable"],"tag":"Package"},["Data.Unfoldable","Data.Unfoldable1"]],[{"values":["unsafe-coerce"],"tag":"Package"},["Unsafe.Coerce"]]]